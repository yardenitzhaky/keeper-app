{"version":3,"sources":["components/LoadingButton.jsx","components/LoadingSpinner.jsx","components/AuthContext.jsx","components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/Login.jsx","components/Register.jsx","components/ForgotPassword.jsx","components/ResetPassword.jsx","components/VerifyEmail.jsx","components/PrivateRoute.jsx","components/CookieAlert.jsx","components/App.jsx","index.jsx"],"names":["LoadingButton","_ref","onClick","loading","children","className","disabled","finalClassName","React","createElement","role","aria-busy","aria-disabled","aria-hidden","LoadingSpinner","aria-label","aria-live","axios","defaults","withCredentials","API_URL","AuthContext","createContext","AuthProvider","user","setUser","useState","setLoading","Provider","value","login","async","identifier","password","rememberMe","post","headers","data","console","log","error","_error$response","response","message","logout","_error$response2","handleGoogleAuthSuccess","get","_error$response3","checkAuthStatus","isAuthenticated","_error$response4","Alert","memo","forwardRef","props","ref","MuiAlert","Object","assign","elevation","variant","Logo","HighlightIcon","UserProfile","_username$","username","email","Tooltip","title","arrow","Avatar","toUpperCase","AccountCircleIcon","Header","useContext","navigate","useNavigate","isLoggingOut","setIsLoggingOut","setError","notification","setNotification","open","severity","handleNotificationClose","event","reason","prev","getErrorMessage","status","request","setTimeout","errorMessage","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","sx","width","Footer","currentYear","Date","getFullYear","socialLinks","icon","WebsiteIcon","fontSize","url","label","LinkedInIcon","GitHubIcon","EmailIcon","map","link","index","key","href","target","rel","CopyrightIcon","Note","id","content","category","onDelete","onEdit","isDeleting","setIsDeleting","isEditing","setIsEditing","anchorEl","setAnchorEl","selectedCategory","setSelectedCategory","categoryColors","Chip","CategoryIcon","e","currentTarget","size","backgroundColor","Uncategorized","color","fontWeight","marginBottom","cursor","opacity","Menu","Boolean","cat","MenuItem","put","newCategory","handleCategoryChange","selected","mr","style","placement","CircularProgress","EditIcon","window","confirm","DeleteIcon","CreateArea","isExpanded","setExpanded","isLoading","setIsLoading","note","setNote","handleChange","name","prevNote","useEffect","editNote","onChange","placeholder","rows","FormControl","minWidth","marginTop","InputLabel","Select","Typography","display","alignItems","mt","InfoIcon","Zoom","in","Fab","preventDefault","noteCategory","noteWithCategory","onUpdate","onAdd","position","right","bottom","DoneIcon","AddIcon","Login","formData","setFormData","errors","setErrors","location","useLocation","URLSearchParams","search","then","catch","server","handleInputChange","type","checked","newErrors","src","alt","onSubmit","validationErrors","validateForm","trim","keys","length","_error$response$data","noValidate","aria-invalid","required","Link","to","PASSWORD_REGEX","FORM_FIELDS","validate","test","confirmPassword","Register","handleRegister","entries","forEach","field","config","state","handleRegistrationError","_error$response3$data","aria-labelledby","_ref2","removed","removedServer","rest","aria-describedby","undefined","ForgotPassword","setEmail","setMessage","_error$response2$data","autoComplete","ResetPassword","token","useParams","setStatus","success","VerifyEmail","_location$state","formState","setFormState","verificationCode","htmlFor","replace","maxLength","pattern","PrivateRoute","Navigate","CookieAlert","isVisible","setIsVisible","selectedBrowser","setSelectedBrowser","userAgent","navigator","toLowerCase","includes","localStorage","getItem","ChromeInstructions","Fragment","SafariInstructions","handleAccept","setItem","App","notes","setNotes","setEditNote","deleteNote","delete","prevNotes","filter","noteItem","handleEditClick","fetchNotes","Router","Routes","Route","path","element","newNote","savedNote","updatedNote","Error","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.48f9e8d3.chunk.js","sourcesContent":["/**\n * LoadingButton Component\n * A reusable button component that handles loading states\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LoadingButton = ({\n  onClick,\n  loading,\n  children,\n  className = '',\n  disabled = false\n}) => {\n  // ============================================================================\n  // STYLES\n  // ============================================================================\n  \n  const baseClass = \"relative inline-flex items-center justify-center transition-all duration-200\";\n  const finalClassName = `${baseClass} ${className}`;\n\n  // ============================================================================\n  // RENDER\n  // ============================================================================\n  \n  return (\n    <button\n      onClick={onClick}\n      disabled={loading || disabled}\n      className={finalClassName}\n      role=\"button\"\n      aria-busy={loading}\n      aria-disabled={loading || disabled}\n    >\n      {loading ? (\n        <div \n          className=\"flex items-center space-x-2\"\n          aria-hidden=\"true\"\n        >\n          <div \n            className=\"w-4 h-4 border-2 border-t-transparent border-white rounded-full animate-spin\" \n            role=\"progressbar\"\n          />\n          <span className=\"opacity-70\">Loading...</span>\n        </div>\n      ) : (\n        children\n      )}\n    </button>\n  );\n};\n\n\nexport default LoadingButton;","/**\n * LoadingSpinner Component\n * Displays a loading animation with informational text\n * Used during initial application load and data fetching operations\n * @component\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LoadingSpinner = () => {\n  // ============================================================================\n  // RENDER\n  // ============================================================================\n  \n  return (\n    <div \n      className=\"loading-container\"\n      role=\"alert\"\n      aria-busy=\"true\"\n      aria-label=\"Loading content\"\n    >\n      <div className=\"loading-spinner\">\n        {/* Spinner Animation */}\n        <div \n          className=\"spinner-wrapper\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"spinner-ring outer\"></div>\n          <div className=\"spinner-ring inner\"></div>\n          <div className=\"spinner-dot\"></div>\n        </div>\n\n        {/* Loading Text */}\n        <div \n          className=\"spinner-text\"\n          aria-live=\"polite\"\n        >\n          Loading...\n        </div>\n\n        {/* Information Message */}\n        <div \n          className=\"spinner-subtext\"\n          role=\"status\"\n          aria-live=\"polite\"\n        >\n          Please note: Initial load may take up to 30 seconds as the server spins up \n          on Render's free tier.\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;","import React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Configure axios to include credentials in requests\naxios.defaults.withCredentials = true;\n\n// API endpoint\nconst API_URL = 'https://keeper-app-bakcend-and-db.onrender.com';\n\n// Create context for authentication\nexport const AuthContext = createContext();\n\n/**\n * Authentication Provider Component\n * Manages authentication state and provides auth-related functions to children\n */\nexport function AuthProvider({ children }) {\n    // ============================================================================\n    // STATE MANAGEMENT\n    // ============================================================================\n    const [user, setUser] = useState(null);        // Current user data\n    const [loading, setLoading] = useState(true);  // Loading state for auth checks\n\n    // ============================================================================\n    // AUTHENTICATION FUNCTIONS\n    // ============================================================================\n\n    /**\n     * Handles user login with email/username and password\n     * @param {string} identifier - Username or email\n     * @param {string} password - User password\n     * @param {boolean} rememberMe - Whether to persist session\n     * @returns {Object} Logged in user data\n     */\n    const login = async (identifier, password, rememberMe) => {\n        try {\n            const response = await axios.post(\n                `${API_URL}/login`,\n                { identifier, password, rememberMe },\n                {\n                    withCredentials: true,\n                    headers: { 'Content-Type': 'application/json' }\n                }\n            );\n            const user = response.data.user;\n            console.log(\"User set in AuthContext:\", user);\n            setUser(user);\n            return user;\n        } catch (error) {\n            console.error(\"Login failed:\", error.response?.data || error.message);\n            throw error;\n        }\n    };\n\n    /**\n     * Handles user logout\n     * Clears user session and local state\n     */\n    const logout = async () => {\n        try {\n            await axios.post(\n                `${API_URL}/logout`, \n                {}, \n                { withCredentials: true }\n            );\n            setUser(null);\n        } catch (error) {\n            console.error(\"Logout failed:\", error.response?.data || error.message);\n        }\n    };\n\n    /**\n     * Handles successful Google OAuth authentication\n     * Fetches and sets user data after Google auth\n     * @returns {Object} Authenticated user data\n     */\n    const handleGoogleAuthSuccess = async () => {\n        try {\n            const response = await axios.get(\n                `${API_URL}/me`,\n                { withCredentials: true }\n            );\n            setUser(response.data.user);\n            return response.data.user;\n        } catch (error) {\n            console.error(\"Error fetching user after Google auth:\", error.response?.data || error.message);\n            throw error;\n        }\n    };\n\n    /**\n     * Checks current authentication status\n     * Used to restore user session on page reload/revisit\n     */\n    const checkAuthStatus = async () => {\n        try {\n            console.log(\"Checking auth status...\");\n            const response = await axios.get(\n                `${API_URL}/check-session`,\n                {\n                    withCredentials: true,\n                    headers: { 'Content-Type': 'application/json' }\n                }\n            );\n\n            console.log(\"Auth status check response:\", response.data);\n            \n            if (response.data.isAuthenticated && response.data.user) {\n                console.log(\"Setting user:\", response.data.user);\n                setUser(response.data.user);\n            } else {\n                console.log(\"No authenticated user found\");\n                setUser(null);\n            }\n        } catch (error) {\n            console.log(\"Error checking auth status:\", error.response?.data || error.message);\n            setUser(null);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // ============================================================================\n    // CONTEXT PROVIDER\n    // ============================================================================\n    \n    return (\n        <AuthContext.Provider \n            value={{ \n                // State\n                user, \n                setUser, \n                loading,\n                \n                // Authentication functions\n                login,\n                logout,\n                handleGoogleAuthSuccess,\n                checkAuthStatus\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n}","/**\n * Header Component\n * Displays application header with logo, user profile, and logout functionality\n * @component\n */\n\nimport React, { useContext, useState, memo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Snackbar, Avatar, Tooltip } from \"@mui/material\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport HighlightIcon from \"@mui/icons-material/Highlight\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport LoadingButton from \"./LoadingButton\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport { AuthContext } from \"./AuthContext\";\n\n// Memoized Alert component\nconst Alert = memo(React.forwardRef((props, ref) => (\n  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />\n)));\n\n// Memoized Logo component\nconst Logo = memo(() => (\n  <span className=\"app-title\" role=\"banner\">\n    <HighlightIcon aria-hidden=\"true\" />\n    <span aria-label=\"Keeper App\">Keeper App</span>\n  </span>\n));\n\n// Memoized UserProfile component\nconst UserProfile = memo(({ username, email }) => (\n  <div className=\"user-profile\" role=\"complementary\" aria-label=\"User profile\">\n    <Tooltip title={`${username} (${email})`} arrow>\n      <div className=\"profile-info\">\n        <Avatar className=\"user-avatar\" aria-hidden=\"true\">\n          {username?.[0]?.toUpperCase() || <AccountCircleIcon />}\n        </Avatar>\n        <span className=\"username\" aria-label={`Logged in as ${username}`}>\n          {username}\n        </span>\n      </div>\n    </Tooltip>\n  </div>\n));\n\nconst Header = () => {\n  // ============================================================================\n  // HOOKS & STATE\n  // ============================================================================\n  \n  const { user, logout } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [isLoggingOut, setIsLoggingOut] = useState(false);\n  const [error, setError] = useState(null);\n  const [notification, setNotification] = useState({\n    open: false,\n    message: \"\",\n    severity: \"success\"\n  });\n\n  // ============================================================================\n  // EVENT HANDLERS\n  // ============================================================================\n  \n  /**\n   * Handles user logout process with error handling and notifications\n   */\n  const handleLogout = async () => {\n    setIsLoggingOut(true);\n    setError(null);\n    \n    try {\n      await logout();\n      setNotification({\n        open: true,\n        message: \"Successfully logged out. See you next time!\",\n        severity: \"success\"\n      });\n      setTimeout(() => navigate(\"/login\"), 1500); // Delay navigation to show notification\n    } catch (error) {\n      console.error(\"Logout failed:\", error);\n      const errorMessage = getErrorMessage(error);\n      setError(errorMessage);\n      setNotification({\n        open: true,\n        message: errorMessage,\n        severity: \"error\"\n      });\n    } finally {\n      setIsLoggingOut(false);\n    }\n  };\n\n  /**\n   * Handles closing of notification snackbar\n   */\n  const handleNotificationClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setNotification(prev => ({ ...prev, open: false }));\n  };\n\n  /**\n   * Gets user-friendly error message based on error type\n   */\n  const getErrorMessage = (error) => {\n    if (error.response) {\n      switch (error.response.status) {\n        case 401:\n          return \"Session expired. Please log in again.\";\n        case 403:\n          return \"You don't have permission to perform this action.\";\n        case 500:\n          return \"Server error. Please try again later.\";\n        default:\n          return \"An unexpected error occurred. Please try again.\";\n      }\n    }\n    if (error.request) {\n      return \"Network error. Please check your connection.\";\n    }\n    return \"Failed to log out. Please try again.\";\n  };\n\n  // ============================================================================\n  // RENDER\n  // ============================================================================\n  \n  return (\n    <header role=\"banner\" aria-label=\"Application header\">\n      <h1>\n        <Logo />\n      </h1>\n\n      {user && (\n        <div className=\"header-controls\" role=\"navigation\">\n          <UserProfile \n            username={user.username} \n            email={user.email}\n          />\n\n          <LoadingButton\n            onClick={handleLogout}\n            loading={isLoggingOut}\n            className=\"logout-button\"\n            disabled={isLoggingOut}\n            aria-label={isLoggingOut ? \"Logging out...\" : \"Log out of your account\"}\n            aria-busy={isLoggingOut}\n          >\n            {isLoggingOut ? \"Logging out...\" : \"Logout\"}\n          </LoadingButton>\n\n          {error && (\n            <span \n              className=\"error-message\" \n              role=\"alert\" \n              aria-live=\"polite\"\n            >\n              {error}\n            </span>\n          )}\n        </div>\n      )}\n\n      <Snackbar\n        open={notification.open}\n        autoHideDuration={6000}\n        onClose={handleNotificationClose}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <Alert\n          onClose={handleNotificationClose}\n          severity={notification.severity}\n          sx={{ width: '100%' }}\n        >\n          {notification.message}\n        </Alert>\n      </Snackbar>\n    </header>\n  );\n};\n\nexport default Header;","/**\n * Footer Component\n * Displays a fixed footer with social links and copyright information\n * @component\n * @version 1.0.0\n */\n\nimport React from \"react\";\n\n// Material-UI Icons for social links and copyright\nimport {\n  LinkedIn as LinkedInIcon,\n  GitHub as GitHubIcon,\n  Email as EmailIcon,\n  Copyright as CopyrightIcon,\n  Language as WebsiteIcon\n} from '@mui/icons-material';\n\nconst Footer = () => {\n  // ============================================================================\n  // CONSTANTS AND CONFIGURATIONS\n  // ============================================================================\n  \n  // Get current year for copyright notice\n  const currentYear = new Date().getFullYear();\n\n  /**\n   * Configuration for social media links and contact information\n   * Each object contains icon, URL, and label for accessibility\n   */\n  const socialLinks = [\n    {\n      icon: <WebsiteIcon fontSize=\"small\" />,\n      url: \"https://yardenitzhaky.github.io/Portfolio/\",\n      label: \"Portfolio\"\n    },\n    {\n      icon: <LinkedInIcon fontSize=\"small\" />,\n      url: \"https://www.linkedin.com/in/yardenitzhaky\",\n      label: \"LinkedIn\"\n    },\n    {\n      icon: <GitHubIcon fontSize=\"small\" />,\n      url: \"https://github.com/yardenitzhaky\",\n      label: \"GitHub\"\n    },\n    {\n      icon: <EmailIcon fontSize=\"small\" />,\n      url: \"mailto:yardene015@gmail.com\",\n      label: \"Email\"\n    }\n  ];\n\n  // ============================================================================\n  // RENDER\n  // ============================================================================\n  \n  return (\n    <footer>\n      <div className=\"footer-content\">\n        {/* Social Links Section */}\n        <div className=\"social-links\">\n          {socialLinks.map((link, index) => (\n            <a\n              key={index}\n              href={link.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label={link.label}\n              className=\"social-icon\"\n              title={link.label}\n            >\n              {link.icon}\n            </a>\n          ))}\n        </div>\n\n        {/* Copyright Section */}\n        <p className=\"copyright\">\n          <CopyrightIcon fontSize=\"small\" />\n          <span>{currentYear}</span>\n          <span className=\"separator\">|</span>\n          <span className=\"creator\">Created by Yarden Itzhaky</span>\n        </p>\n      </div>\n    </footer>\n  );\n};\n\n// PropTypes could be added here if component accepts props in the future\n\nexport default Footer;","import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Tooltip from '@mui/material/Tooltip';\nimport CategoryIcon from \"@mui/icons-material/Category\";\nimport Chip from '@mui/material/Chip';\nimport { Menu, MenuItem } from '@mui/material';\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\n\nconst API_URL = 'https://keeper-app-bakcend-and-db.onrender.com';\n\n\n\n/**\n * Note Component\n * Displays a single note with title, content, and action buttons\n * Supports edit and delete functionality with loading states\n */\nconst Note = ({ id, title, content, category = \"Uncategorized\", onDelete, onEdit }) => {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [error, setError] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(category);\n\n\n\n  // ============================================================================\n  // EVENT HANDLERS\n  // ============================================================================\n  \n  const handleDeleteClick = async () => {\n    if (window.confirm('Are you sure you want to delete this note?')) {\n      setIsDeleting(true);\n      setError(null);\n      \n      try {\n        await onDelete(id);\n      } catch (error) {\n        console.error(\"Error deleting note:\", error);\n        setError(\"Failed to delete note\");\n      } finally {\n        setIsDeleting(false);\n      }\n    }\n  };\n\n  const handleEditClick = async () => {\n    setIsEditing(true);\n    setError(null);\n    \n    try {\n      await onEdit(id, title, content);\n    } catch (error) {\n      console.error(\"Error editing note:\", error);\n      setError(\"Failed to edit note\");\n    } finally {\n      setIsEditing(false);\n    }\n  };\n\n  const handleCategoryChange = async (newCategory) => {\n    try {\n      const response = await axios.put(\n        `${API_URL}/notes/${id}/category`,\n        { category: newCategory },\n        { withCredentials: true }\n      );\n      setSelectedCategory(newCategory);\n      onEdit(id, title, content, response.data.category);\n    } catch (error) {\n      console.error(\"Failed to update category:\", error);\n      setError(\"Failed to update category\");\n    }\n  };\n\n  const categoryColors = {\n    'Politics': '#FF6B6B',\n    'Sport': '#4DABF7',\n    'Technology': '#51CF66',\n    'Entertainment': '#FFD43B',\n    'Business': '#845EF7',\n    'Uncategorized': '#868E96'\n  };\n  \n  const getCategoryColor = (cat) => categoryColors[cat] || categoryColors.Uncategorized;\n\n  \n\n  // ============================================================================\n  // RENDER\n  // ============================================================================\n  \n  return (\n    <div className=\"note\" role=\"article\">\n      {/* Category Chip */}\n      <div className=\"note-category\">\n        <Tooltip title=\"Click to change category\">\n          <Chip\n            icon={<CategoryIcon />}\n            label={selectedCategory || 'Uncategorized'}\n            onClick={(e) => setAnchorEl(e.currentTarget)}\n            size=\"small\"\n            sx={{\n              backgroundColor: categoryColors[category] || categoryColors.Uncategorized,\n              color: category === 'Entertainment' ? 'black' : 'white',\n              fontWeight: 500,\n              marginBottom: '8px',\n              cursor: 'pointer',\n              '&:hover': {\n                opacity: 0.9\n              }\n            }}\n          />\n        </Tooltip>\n\n        {/* Category Selection Menu */}\n        <Menu\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={() => setAnchorEl(null)}\n        >\n          {[\"Politics\", \"Sport\", \"Technology\", \"Entertainment\", \"Business\", \"Uncategorized\"].map((cat) => (\n            <MenuItem \n              key={cat}\n              onClick={() => {\n                handleCategoryChange(cat);\n                setAnchorEl(null);\n              }}\n              selected={cat === selectedCategory}\n            >\n              <CategoryIcon sx={{ mr: 1, color: categoryColors[cat] }} />\n              {cat}\n            </MenuItem>\n          ))}\n        </Menu>\n      </div>\n\n      {/* Note Content */}\n      <h1>{title}</h1>\n      <p>{content}</p>\n\n      {/* Error Message */}\n      {error && (\n        <div \n          role=\"alert\" \n          style={{ \n            color: '#e53e3e', \n            fontSize: '0.875rem', \n            marginBottom: '8px' \n          }}\n        >\n          {error}\n        </div>\n      )}\n\n      {/* Action Buttons */}\n      <div className=\"note-buttons\">\n        <Tooltip title=\"Edit note\" placement=\"top\">\n          <button\n            onClick={handleEditClick}\n            disabled={isEditing || isDeleting}\n            aria-label=\"Edit note\"\n          >\n            {isEditing ? (\n              <CircularProgress \n                size={24} \n                color=\"inherit\" \n                aria-label=\"Editing...\" \n              />\n            ) : (\n              <EditIcon aria-hidden=\"true\" />\n            )}\n          </button>\n        </Tooltip>\n\n        <Tooltip title=\"Delete note\" placement=\"top\">\n          <button\n            onClick={handleDeleteClick}\n            disabled={isEditing || isDeleting}\n            aria-label=\"Delete note\"\n          >\n            {isDeleting ? (\n              <CircularProgress \n                size={24} \n                color=\"inherit\" \n                aria-label=\"Deleting...\" \n              />\n            ) : (\n              <DeleteIcon aria-hidden=\"true\" />\n            )}\n          </button>\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n\nexport default Note;","/**\n * CreateArea Component\n * Handles the creation and editing of notes with an expandable form interface\n * @component\n * @param {Object} props\n * @param {Function} props.onAdd - Callback for adding a new note\n * @param {Function} props.onUpdate - Callback for updating an existing note\n * @param {Object} props.editNote - Note being edited (null if creating new note)\n */\n\nimport React, { useState, useEffect } from \"react\";\n\n// Material-UI Components\nimport { Fab, Zoom, FormControl, InputLabel, Select, MenuItem, Typography } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DoneIcon from '@mui/icons-material/Done';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport CategoryIcon from \"@mui/icons-material/Category\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport Tooltip from '@mui/material/Tooltip';\n\n// Custom Components\nimport LoadingButton from \"./LoadingButton.jsx\";\nimport LoadingSpinner from \"./LoadingSpinner.jsx\";\n\n// HTTP Client\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\n\nconst API_URL = 'https://keeper-app-bakcend-and-db.onrender.com';\n\nfunction CreateArea(props) {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  \n  const [isExpanded, setExpanded] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  const categoryColors = {\n    'Politics': '#FF6B6B',\n    'Sport': '#4DABF7',\n    'Technology': '#51CF66',\n    'Entertainment': '#FFD43B',\n    'Business': '#845EF7',\n    'Uncategorized': '#868E96'\n  };\n\n\n  // ============================================================================\n  // EFFECTS\n  // ============================================================================\n  \n  // Handle edit mode when a note is passed for editing\n  useEffect(() => {\n    if (props.editNote) {\n      setNote({\n        title: props.editNote.title,\n        content: props.editNote.content,\n        category: props.editNote.category || \"\"\n      });\n      setExpanded(true);\n    }\n  }, [props.editNote]);\n\n  // ============================================================================\n  // EVENT HANDLERS\n  // ============================================================================\n  \n  /**\n   * Handles input changes in the form fields\n   * @param {React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>} event\n   */\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setNote(prevNote => ({\n      ...prevNote,\n      [name]: value\n    }));\n  }\n\n  /**\n   * Handles form submission for both creating and editing notes\n   * @param {React.FormEvent} event\n   */\n  async function submitNote(event) {\n    event.preventDefault();\n    setIsLoading(true);\n  \n    try {\n      // If a category is manually selected, use it. Otherwise, get prediction\n      let noteCategory = note.category;\n      \n      if (!noteCategory) {\n        try {\n          const response = await axios.post(`${API_URL}/classify-text`, {\n            title: note.title,\n            content: note.content\n          });\n          console.log(\"Classification response:\", response.data);\n          noteCategory = response.data.category;\n        } catch (error) {\n          console.error(\"Classification error:\", error);\n          noteCategory = \"Uncategorized\";\n        }\n      }\n  \n      const noteWithCategory = {\n        ...note,\n        category: noteCategory\n      };\n  \n      if (props.editNote) {\n        await props.onUpdate({\n          ...props.editNote,\n          ...noteWithCategory\n        });\n      } else {\n        await props.onAdd(noteWithCategory);\n      }\n  \n      // Reset form state\n      setNote({\n        title: \"\",\n        content: \"\",\n        category: \"\"\n      });\n      setExpanded(false);\n    } catch (error) {\n      console.error(\"Error submitting note:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  /**\n   * Expands the form to show title input\n   */\n  function expand() {\n    setExpanded(true);\n  }\n\n  // ============================================================================\n  // RENDER\n  // ============================================================================\n  \n  return (\n    <div>\n      <form className=\"create-note\">\n        {/* Title input - only shown when form is expanded */}\n        {isExpanded && (\n          <input\n            name=\"title\"\n            onChange={handleChange}\n            value={note.title}\n            placeholder=\"Title\"\n          />\n        )}\n\n        {/* Note content textarea */}\n        <textarea\n          onClick={expand}\n          name=\"content\"\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows={isExpanded ? 3 : 1}\n        />\n\n        {/* Category Selection and Submit Button */}\n        {isExpanded && (\n          <div className=\"note-options\">\n            <FormControl size=\"small\" sx={{ minWidth: 200, marginTop: 1 }}>\n              <InputLabel>Category (Optional)</InputLabel>\n              <Select\n                name=\"category\"\n                value={note.category}\n                onChange={handleChange}\n                label=\"Category (Optional)\"\n              >\n                <MenuItem value=\"\"><em>Auto-detect category</em></MenuItem>\n                {[\"Politics\", \"Sport\", \"Technology\", \"Entertainment\", \"Business\"].map((cat) => (\n                  <MenuItem key={cat} value={cat}>\n                    <CategoryIcon sx={{ mr: 1, color: categoryColors[cat] }} />\n                    {cat}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            \n            <Typography \n              variant=\"caption\" \n              sx={{ \n                display: 'flex', \n                alignItems: 'center', \n                mt: 1,\n                color: 'text.secondary'\n              }}\n            >\n              <InfoIcon sx={{ fontSize: 16, mr: 0.5 }} />\n              AI will try to auto-detect the category if none selected\n            </Typography>\n          </div>\n        )}\n\n        {/* Submit Button with Zoom */}\n        {isExpanded && (\n          <Zoom in={true}>\n            <Fab \n              onClick={submitNote} \n              disabled={isLoading}\n              sx={{ position: 'absolute', right: 18, bottom: -18 }}\n            >\n              {isLoading ? (\n                <CircularProgress size={24} color=\"inherit\" />\n              ) : (\n                props.editNote ? <DoneIcon /> : <AddIcon />\n              )}\n            </Fab>\n          </Zoom>\n        )}\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;","\n// export default Login;\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { AuthContext } from \"./AuthContext\";\nimport { useNavigate, Link, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LoadingButton from \"./LoadingButton\";\nimport LoadingSpinner from \"./LoadingSpinner\";\n\n// Configure axios defaults\naxios.defaults.withCredentials = true;\n\n// Constants\nconst API_URL = 'https://keeper-app-bakcend-and-db.onrender.com';\n\n/**\n * Login Component\n * Handles user authentication through email/username or Google OAuth\n * @component\n */\nfunction Login() {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  \n  // Form state\n  const [formData, setFormData] = useState({\n    identifier: \"\",\n    password: \"\",\n    rememberMe: false\n  });\n  const [errors, setErrors] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Hooks\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { \n    login, \n    handleGoogleAuthSuccess, \n    user, \n    checkAuthStatus \n  } = useContext(AuthContext);\n\n  // ============================================================================\n  // EFFECTS\n  // ============================================================================\n\n  // Handle Google OAuth redirect\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const googleAuth = queryParams.get('google_auth');\n    \n    if (googleAuth === 'success') {\n      handleGoogleAuthSuccess()\n        .then(() => navigate('/notes'))\n        .catch(error => {\n          console.error(\"Google auth error:\", error);\n          setErrors({ \n            server: \"Failed to authenticate with Google. Please try again.\" \n          });\n        });\n    }\n  }, [location, handleGoogleAuthSuccess, navigate]);\n\n  // Redirect if user is already logged in\n  useEffect(() => {\n    if (user) {\n      navigate('/');\n    }\n  }, [user, navigate]);\n\n  // ============================================================================\n  // EVENT HANDLERS\n  // ============================================================================\n\n  /**\n   * Handles input field changes\n   * @param {React.ChangeEvent<HTMLInputElement>} e - Change event\n   */\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n    // Clear related error when user types\n    if (errors[name]) {\n      setErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[name];\n        return newErrors;\n      });\n    }\n  };\n\n  /**\n   * Validates form inputs\n   * @returns {Object} Validation errors\n   */\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!formData.identifier.trim()) {\n      newErrors.identifier = \"Username or email is required\";\n    }\n    if (!formData.password) {\n      newErrors.password = \"Password is required\";\n    }\n\n    return newErrors;\n  };\n\n  /**\n   * Handles form submission\n   * @param {React.FormEvent} e - Form event\n   */\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    const validationErrors = validateForm();\n    \n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const loggedInUser = await login(\n        formData.identifier, \n        formData.password, \n        formData.rememberMe\n      );\n      navigate(\"/\");\n    } catch (error) {\n      setErrors({\n        server: error.response?.data?.message || \n                error.response?.data || \n                error.message || \n                'Login failed'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  /**\n   * Initiates Google OAuth flow\n   * @param {React.MouseEvent} e - Click event\n   */\n  const handleGoogleSignIn = (e) => {\n    e.preventDefault();\n    window.location.href = `${API_URL}/auth/google`;\n  };\n\n  // ============================================================================\n  // RENDER\n  // ============================================================================\n  \n  return (\n    <div className=\"auth-container\">\n      <img src={`${process.env.PUBLIC_URL}/images/logo.PNG`} alt=\"App Logo\"  className=\"logo\" />\n      <h2>Login</h2>\n      \n      <form onSubmit={handleLogin} noValidate>\n        {/* Username/Email Input */}\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            id=\"identifier\"\n            name=\"identifier\"\n            placeholder=\"Username or Email\"\n            value={formData.identifier}\n            onChange={handleInputChange}\n            aria-label=\"Username or Email\"\n            aria-invalid={errors.identifier ? \"true\" : \"false\"}\n            required\n          />\n          {errors.identifier && (\n            <p className=\"error\" role=\"alert\">{errors.identifier}</p>\n          )}\n        </div>\n\n        {/* Password Input */}\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={formData.password}\n            onChange={handleInputChange}\n            aria-label=\"Password\"\n            aria-invalid={errors.password ? \"true\" : \"false\"}\n            required\n          />\n          {errors.password && (\n            <p className=\"error\" role=\"alert\">{errors.password}</p>\n          )}\n        </div>\n\n        {/* Remember Me Checkbox */}\n        <label className=\"remember-me\">\n          <input\n            type=\"checkbox\"\n            id=\"rememberMe\"\n            name=\"rememberMe\"\n            checked={formData.rememberMe}\n            onChange={handleInputChange}\n          />\n          <span>Remember Me</span>\n        </label>\n\n        {/* Server Error Message */}\n        {errors.server && (\n          <p className=\"error server-error\" role=\"alert\">\n            {errors.server}\n          </p>\n        )}\n\n        {/* Login Button */}\n        <LoadingButton\n          loading={isLoading}\n          type=\"submit\"\n          className=\"w-full p-3 bg-[#f5ba13] text-white rounded hover:bg-[#e0a800] disabled:opacity-70\"\n          aria-label={isLoading ? \"Logging in...\" : \"Login\"}\n        >\n          Login\n        </LoadingButton>\n      </form>\n\n      {/* Google Sign In */}\n      <LoadingButton \n        onClick={handleGoogleSignIn} \n        className=\"social-login-button\"\n        aria-label=\"Sign in with Google\"\n      >\n        <img src={`${process.env.PUBLIC_URL}/images/google_logo.png`} alt=\"Google\"  aria-hidden=\"true\" />\n        <span>Sign in with Google</span>\n      </LoadingButton>\n\n      {/* Links */}\n      <div className=\"auth-links\">\n        <p>\n          Don't have an account? <Link to=\"/Register\">Register here</Link>\n        </p>\n        <p>\n          <Link to=\"/forgot-password\">Forgot Password?</Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;","/**\n * Register Component\n * Handles user registration with form validation and error handling\n * @component\n */\n\nimport React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LoadingButton from \"./LoadingButton\";\nimport PropTypes from 'prop-types';\n\n// Configure axios\naxios.defaults.withCredentials = true;\n\n// API configuration\nconst API_URL = 'https://keeper-app-bakcend-and-db.onrender.com';\n\n// Password validation regex\nconst PASSWORD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).{8,}$/;\n\n/**\n * Form field configuration\n * Defines validation rules and error messages for each field\n */\nconst FORM_FIELDS = {\n  username: {\n    type: 'text',\n    placeholder: 'Username',\n    validate: (value) => {\n      if (!value.trim()) return \"Username is required\";\n      if (value.length < 3) return \"Username must be at least 3 characters\";\n      return null;\n    }\n  },\n  email: {\n    type: 'email',\n    placeholder: 'Email',\n    validate: (value) => {\n      if (!value.trim()) return \"Email is required\";\n      if (!/\\S+@\\S+\\.\\S+/.test(value)) return \"Email is invalid\";\n      return null;\n    }\n  },\n  password: {\n    type: 'password',\n    placeholder: 'Password',\n    validate: (value) => {\n      if (!value) return \"Password is required\";\n      if (!PASSWORD_REGEX.test(value)) return \"Password must be at least 8 characters, include an uppercase letter, a lowercase letter, a number, and a special character\";\n      return null;\n    }\n  },\n  confirmPassword: {\n    type: 'password',\n    placeholder: 'Confirm Password',\n    validate: (value, formData) => {\n      if (value !== formData.password) return \"Passwords do not match\";\n      return null;\n    }\n  }\n};\n\nfunction Register() {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  \n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  // ============================================================================\n  // FORM VALIDATION\n  // ============================================================================\n  \n  /**\n   * Validates all form fields\n   * @returns {Object} Validation errors\n   */\n  const validateForm = () => {\n    const validationErrors = {};\n    \n    Object.entries(FORM_FIELDS).forEach(([field, config]) => {\n      const error = config.validate(formData[field], formData);\n      if (error) validationErrors[field] = error;\n    });\n\n    return validationErrors;\n  };\n\n  // ============================================================================\n  // EVENT HANDLERS\n  // ============================================================================\n  \n  /**\n   * Handles input field changes\n   * @param {string} field - Field name\n   * @param {string} value - New field value\n   */\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n\n    setErrors(prev => {\n      const { [field]: removed, server: removedServer, ...rest } = prev;\n      return rest;\n    });\n  };\n\n  /**\n   * Handles form submission\n   * @param {Event} e - Form submit event\n   */\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    const validationErrors = validateForm();\n\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      await axios.post(\n        `${API_URL}/register`,\n        {\n          username: formData.username,\n          email: formData.email,\n          password: formData.password,\n        },\n        { withCredentials: true }\n      );\n      navigate(\"/verify-email\", { state: { email: formData.email } });\n    } catch (error) {\n      console.error(\"Registration failed:\", error.response?.data || error.message);\n      handleRegistrationError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  /**\n   * Handles registration error responses\n   * @param {Error} error - Error object\n   */\n  const handleRegistrationError = (error) => {\n    if (error.response?.status === 409) {\n      const { field, message } = error.response.data;\n      setErrors(prev => ({ ...prev, [field]: message }));\n    } else if (error.response?.data?.message) {\n      setErrors(prev => ({ ...prev, server: error.response.data.message }));\n    } else {\n      setErrors(prev => ({\n        ...prev,\n        server: \"Registration failed. Please try again later.\"\n      }));\n    }\n  };\n\n  // ============================================================================\n  // RENDER\n  // ============================================================================\n  \n  return (\n    <div className=\"auth-container\" role=\"main\" aria-labelledby=\"register-title\">\n      <img src={`${process.env.PUBLIC_URL}/images/logo.PNG`} alt=\"App Logo\"  className=\"logo\" />\n      <h2 id=\"register-title\">Register</h2>\n      \n      <form onSubmit={handleRegister} noValidate>\n        {Object.entries(FORM_FIELDS).map(([field, config]) => (\n          <div key={field} className=\"form-field\">\n            <input\n              type={config.type}\n              id={field}\n              name={field}\n              placeholder={config.placeholder}\n              value={formData[field]}\n              onChange={(e) => handleInputChange(field, e.target.value)}\n              aria-invalid={!!errors[field]}\n              aria-describedby={errors[field] ? `${field}-error` : undefined}\n              required\n            />\n            {errors[field] && (\n              <p \n                className=\"error\" \n                id={`${field}-error`}\n                role=\"alert\"\n              >\n                {errors[field]}\n              </p>\n            )}\n          </div>\n        ))}\n\n        {errors.server && (\n          <p \n            className=\"error server-error\" \n            role=\"alert\"\n          >\n            {errors.server}\n          </p>\n        )}\n\n        <LoadingButton\n          onClick={handleRegister}\n          loading={isLoading}\n          className=\"w-full p-3 bg-[#f5ba13] text-white rounded hover:bg-[#e0a800] disabled:opacity-70\"\n          aria-label={isLoading ? \"Registering...\" : \"Register\"}\n        >\n          Register\n        </LoadingButton>\n      </form>\n\n      <p className=\"auth-link\">\n        Already have an account?{' '}\n        <Link to=\"/Login\" className=\"link\">\n          Login here\n        </Link>\n      </p>\n    </div>\n  );\n}\n\nexport default Register;","/**\n * ForgotPassword Component\n * Handles password reset requests through email\n * @component\n */\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\n// Configure axios for credentials\naxios.defaults.withCredentials = true;\n\n// API Configuration\nconst API_URL = 'https://keeper-app-bakcend-and-db.onrender.com';\n\nconst ForgotPassword = () => {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  \n  // Form input\n  const [email, setEmail] = useState(\"\");\n  \n  // UI States\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  // ============================================================================\n  // EVENT HANDLERS\n  // ============================================================================\n  \n  /**\n   * Handles form submission for password reset request\n   * @param {Event} e - Form submission event\n   */\n  const handleForgotPassword = async (e) => {\n    e.preventDefault();\n    \n    // Reset UI states\n    setIsLoading(true);\n    setMessage(\"\");\n    setError(\"\");\n\n    try {\n      // Send password reset request\n      const response = await axios.post(\n        `${API_URL}/forgot-password`,\n        { email },\n        { withCredentials: true }\n      );\n\n      // Show success message\n      setMessage(response.data.message);\n      \n      // Clear form\n      setEmail(\"\");\n    } catch (error) {\n      console.error(\"Forgot Password Error:\", error.response?.data || error.message);\n      \n      // Show error message\n      setError(\n        error.response?.data?.message || \n        \"An error occurred. Please try again later.\"\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // ============================================================================\n  // RENDER\n  // ============================================================================\n  \n  return (\n    <div className=\"auth-container\">\n      {/* Logo */}\n      <img src={`${process.env.PUBLIC_URL}/images/logo.PNG`} alt=\"App Logo\" className=\"logo\" />\n      \n      {/* Header */}\n      <h2>Forgot Password</h2>\n\n      {/* Success/Error Messages */}\n      {message && (\n        <p className=\"success-message\" role=\"alert\">\n          {message}\n        </p>\n      )}\n      \n      {error && (\n        <p className=\"error-message\" role=\"alert\">\n          {error}\n        </p>\n      )}\n\n      {/* Password Reset Form */}\n      <form onSubmit={handleForgotPassword} noValidate>\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Enter your registered email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          disabled={isLoading}\n          required\n          autoComplete=\"email\"\n          aria-label=\"Email address\"\n          className={error ? 'error-input' : ''}\n        />\n\n        <button \n          type=\"submit\" \n          disabled={isLoading || !email.trim()}\n        >\n          {isLoading ? \"Sending...\" : \"Send Reset Link\"}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ForgotPassword;","/**\n * ResetPassword Component\n * Allows users to reset their password using a reset token\n * @component\n */\n\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport PropTypes from 'prop-types';\nimport LoadingButton from \"./LoadingButton\";\n\n// Configure axios\naxios.defaults.withCredentials = true;\n\n// API configuration\nconst API_URL = 'https://keeper-app-bakcend-and-db.onrender.com';\n\n// Password validation regex\nconst PASSWORD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).{8,}$/;\n\nconst ResetPassword = () => {\n  // ============================================================================\n  // HOOKS & STATE\n  // ============================================================================\n  \n  const { token } = useParams();\n  const navigate = useNavigate();\n  \n  const [formData, setFormData] = useState({\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [status, setStatus] = useState({\n    success: \"\",\n    errors: {},\n    isLoading: false\n  });\n\n  // ============================================================================\n  // VALIDATION\n  // ============================================================================\n  \n  /**\n   * Validates the password against security requirements\n   * @param {string} password - Password to validate\n   * @returns {boolean} Is password valid\n   */\n  const isStrongPassword = (password) => {\n    return PASSWORD_REGEX.test(password);\n  };\n\n  /**\n   * Validates the form input\n   * @returns {Object} Validation errors\n   */\n  const validateForm = () => {\n    const errors = {};\n\n    if (!isStrongPassword(formData.password)) {\n      errors.password = \"Password must be at least 8 characters long and include at least one uppercase letter, one lowercase letter, one number, and one special character.\";\n    }\n\n    if (formData.password !== formData.confirmPassword) {\n      errors.confirmPassword = \"Passwords do not match\";\n    }\n\n    return errors;\n  };\n\n  // ============================================================================\n  // EVENT HANDLERS\n  // ============================================================================\n  \n  /**\n   * Handles input changes\n   * @param {React.ChangeEvent<HTMLInputElement>} e - Change event\n   */\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear related errors\n    setStatus(prev => ({\n      ...prev,\n      errors: {\n        ...prev.errors,\n        [name]: undefined,\n        server: undefined\n      }\n    }));\n  };\n\n  /**\n   * Handles form submission\n   * @param {React.FormEvent} e - Form event\n   */\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n    \n    // Validate form\n    const validationErrors = validateForm();\n    if (Object.keys(validationErrors).length > 0) {\n      setStatus(prev => ({\n        ...prev,\n        errors: validationErrors\n      }));\n      return;\n    }\n\n    // Reset state\n    setStatus(prev => ({\n      ...prev,\n      isLoading: true,\n      errors: {}\n    }));\n\n    try {\n      const response = await axios.post(\n        `${API_URL}/reset-password/${token}`,\n        { password: formData.password },\n        { withCredentials: true }\n      );\n\n      setStatus(prev => ({\n        ...prev,\n        success: response.data.message\n      }));\n\n      // Redirect after success\n      setTimeout(() => navigate(\"/login\"), 3000);\n    } catch (error) {\n      console.error(\"Reset Password Error:\", error.response?.data || error.message);\n      \n      setStatus(prev => ({\n        ...prev,\n        errors: {\n          server: error.response?.data?.message || \"An error occurred. Please try again later.\"\n        }\n      }));\n    } finally {\n      setStatus(prev => ({\n        ...prev,\n        isLoading: false\n      }));\n    }\n  };\n\n  // ============================================================================\n  // RENDER\n  // ============================================================================\n  \n  return (\n    <div className=\"auth-container\" role=\"main\" aria-labelledby=\"reset-password-title\">\n      <h2 id=\"reset-password-title\">Reset Password</h2>\n      \n      {status.success ? (\n        <p \n          className=\"success-message\" \n          role=\"alert\"\n        >\n          {status.success}\n        </p>\n      ) : (\n        <form onSubmit={handleResetPassword} noValidate>\n          <div className=\"form-field\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter your new password\"\n              value={formData.password}\n              onChange={handleInputChange}\n              required\n              aria-label=\"New password\"\n              aria-invalid={!!status.errors.password}\n              aria-describedby={status.errors.password ? \"password-error\" : undefined}\n            />\n            {status.errors.password && (\n              <p \n                id=\"password-error\" \n                className=\"error\" \n                role=\"alert\"\n              >\n                {status.errors.password}\n              </p>\n            )}\n          </div>\n\n          <div className=\"form-field\">\n            <input\n              type=\"password\"\n              name=\"confirmPassword\"\n              placeholder=\"Confirm your new password\"\n              value={formData.confirmPassword}\n              onChange={handleInputChange}\n              required\n              aria-label=\"Confirm new password\"\n              aria-invalid={!!status.errors.confirmPassword}\n              aria-describedby={status.errors.confirmPassword ? \"confirm-password-error\" : undefined}\n            />\n            {status.errors.confirmPassword && (\n              <p \n                id=\"confirm-password-error\" \n                className=\"error\" \n                role=\"alert\"\n              >\n                {status.errors.confirmPassword}\n              </p>\n            )}\n          </div>\n\n          {status.errors.server && (\n            <p \n              className=\"error server-error\" \n              role=\"alert\"\n            >\n              {status.errors.server}\n            </p>\n          )}\n\n          <LoadingButton\n            type=\"submit\"\n            loading={status.isLoading}\n            className=\"w-full p-3 bg-[#f5ba13] text-white rounded hover:bg-[#e0a800] disabled:opacity-70\"\n            disabled={status.isLoading}\n            aria-label={status.isLoading ? \"Resetting password...\" : \"Reset password\"}\n          >\n            {status.isLoading ? \"Resetting...\" : \"Reset Password\"}\n          </LoadingButton>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default ResetPassword;","/**\n * VerifyEmail Component\n * Handles email verification process using a verification code\n * @component\n */\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LoadingButton from \"./LoadingButton\";\n\n// Configure axios\naxios.defaults.withCredentials = true;\n\n// API configuration \nconst API_URL = 'https://keeper-app-bakcend-and-db.onrender.com';\n\nfunction VerifyEmail() {\n  // ============================================================================\n  // HOOKS & STATE\n  // ============================================================================\n  \n  const [formState, setFormState] = useState({\n    verificationCode: \"\",\n    message: \"\",\n    isLoading: false,\n    error: \"\",\n  });\n  \n  const location = useLocation();\n  const navigate = useNavigate();\n  const email = location.state?.email;\n\n  // ============================================================================\n  // EFFECTS\n  // ============================================================================\n  \n  useEffect(() => {\n    if (!email) {\n      navigate(\"/register\");\n    }\n  }, [email, navigate]);\n\n  // ============================================================================\n  // EVENT HANDLERS\n  // ============================================================================\n  \n  /**\n   * Handles verification code input changes\n   * @param {React.ChangeEvent<HTMLInputElement>} e - Change event\n   */\n  const handleCodeChange = (e) => {\n    const value = e.target.value.replace(/[^0-9]/g, ''); // Only allow numbers\n    setFormState(prev => ({\n      ...prev,\n      verificationCode: value,\n      error: \"\" // Clear error on input change\n    }));\n  };\n\n  /**\n   * Handles form submission for email verification\n   * @param {React.FormEvent} e - Form submission event\n   */\n  const handleVerification = async (e) => {\n    e.preventDefault();\n    \n    setFormState(prev => ({\n      ...prev,\n      isLoading: true,\n      error: \"\",\n      message: \"\"\n    }));\n\n    try {\n      const response = await axios.post(`${API_URL}/verify-email`, {\n        email,\n        verificationCode: formState.verificationCode,\n        withCredentials: true,\n      });\n\n      setFormState(prev => ({\n        ...prev,\n        message: response.data.message,\n        isLoading: false\n      }));\n\n      // Redirect to login page after successful verification\n      setTimeout(() => navigate(\"/login\"), 2000);\n    } catch (error) {\n      setFormState(prev => ({\n        ...prev,\n        error: error.response?.data?.message || \"Verification failed. Please try again.\",\n        isLoading: false\n      }));\n    }\n  };\n\n  // Return null if no email is present (redirect will handle it)\n  if (!email) return null;\n\n  // ============================================================================\n  // RENDER\n  // ============================================================================\n  \n  return (\n    <div \n      className=\"auth-container\"\n      role=\"main\"\n      aria-labelledby=\"verify-email-title\"\n    >\n      <h2 id=\"verify-email-title\">Email Verification</h2>\n      \n      {/* Status Messages */}\n      {formState.message && (\n        <p \n          className=\"success-message\"\n          role=\"alert\"\n        >\n          {formState.message}\n        </p>\n      )}\n      \n      {formState.error && (\n        <p \n          className=\"error-message\"\n          role=\"alert\"\n        >\n          {formState.error}\n        </p>\n      )}\n\n      {/* Verification Form */}\n      <form \n        onSubmit={handleVerification}\n        className=\"verification-form\"\n        noValidate\n      >\n        <div className=\"input-group\">\n          <label htmlFor=\"verification-code\" className=\"sr-only\">\n            Verification Code\n          </label>\n          <input\n            id=\"verification-code\"\n            type=\"text\"\n            placeholder=\"Enter verification code\"\n            value={formState.verificationCode}\n            onChange={handleCodeChange}\n            maxLength={5}\n            pattern=\"[0-9]*\"\n            required\n            aria-label=\"Enter verification code\"\n            aria-invalid={!!formState.error}\n            aria-describedby={formState.error ? \"error-message\" : undefined}\n          />\n        </div>\n\n        <LoadingButton\n          type=\"submit\"\n          loading={formState.isLoading}\n          disabled={!formState.verificationCode || formState.isLoading}\n          className=\"verify-button\"\n        >\n          {formState.isLoading ? \"Verifying...\" : \"Verify Email\"}\n        </LoadingButton>\n      </form>\n    </div>\n  );\n}\n\nexport default VerifyEmail;","import React from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"./AuthContext\";\nimport LoadingSpinner from \"./LoadingSpinner\";\n\nconst API_URL = 'https://keeper-app-bakcend-and-db.onrender.com';\n\n\nfunction PrivateRoute({ children }) {\n  const { user, loading } = useContext(AuthContext);\n\n  console.log(\"PrivateRoute - User:\", user);\n  console.log(\"PrivateRoute - Loading:\", loading);\n\n  if (loading) {\n    // Optionally, display a loading indicator\n    return <LoadingSpinner />;\n  }\n\n\n\n  console.log(\"PrivateRoute - Rendering children\");\n\n  return user ? children : <Navigate to=\"/login\" />;\n\n}\n\nexport default PrivateRoute;\n","import React, { useState, useEffect } from 'react';\n\n/**\n * CookieAlert Component\n * Displays instructions for enabling cookies based on user's browser\n * Persists acknowledgment in localStorage\n */\nconst CookieAlert = () => {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  \n  // Controls visibility of the alert\n  const [isVisible, setIsVisible] = useState(true);\n  \n  // Detect and set browser type for instructions\n  const [selectedBrowser, setSelectedBrowser] = useState(() => {\n    const userAgent = navigator.userAgent.toLowerCase();\n    if (userAgent.includes('safari') && !userAgent.includes('chrome')) return 'safari';\n    return 'chrome'; // Default to Chrome instructions\n  });\n\n  // ============================================================================\n  // EFFECTS\n  // ============================================================================\n  \n  // Check if user has previously acknowledged the alert\n  useEffect(() => {\n    const hasAcknowledged = localStorage.getItem('cookieAlertAcknowledged');\n    if (hasAcknowledged) {\n      setIsVisible(false);\n    }\n  }, []);\n\n  // ============================================================================\n  // EVENT HANDLERS\n  // ============================================================================\n  \n  // Handle user acceptance of cookie settings\n  const handleAccept = () => {\n    localStorage.setItem('cookieAlertAcknowledged', 'true');\n    setIsVisible(false);\n  };\n\n  // Early return if alert shouldn't be visible\n  if (!isVisible) return null;\n\n  // ============================================================================\n  // BROWSER-SPECIFIC INSTRUCTIONS\n  // ============================================================================\n  \n  // Instructions for Chrome browsers\n  const ChromeInstructions = () => (\n    <>\n      <div className=\"cookie-alert-instructions\">\n        <h3>Chrome Desktop Instructions:</h3>\n        <ol>\n          <li>Click the three dots menu (⋮) in the top-right corner</li>\n          <li>Select \"Settings\"</li>\n          <li>Click \"Privacy and security\" in the left sidebar</li>\n          <li>Click \"Cookies and other site data\"</li>\n          <li>Select \"Allow all cookies\"</li>\n          <li>Refresh this page</li>\n        </ol>\n      </div>\n\n      <div className=\"cookie-alert-instructions\">\n        <h3>Chrome Mobile Instructions:</h3>\n        <ol>\n          <li>Tap the three dots menu (⋮)</li>\n          <li>Tap \"Settings\"</li>\n          <li>Tap \"Privacy and security\"</li>\n          <li>Tap \"Cookies\"</li>\n          <li>Select \"Allow all cookies\"</li>\n          <li>Refresh this page</li>\n        </ol>\n      </div>\n    </>\n  );\n\n  // Instructions for Safari browsers\n  const SafariInstructions = () => (\n    <>\n      <div className=\"cookie-alert-instructions\">\n        <h3>Safari Desktop Instructions:</h3>\n        <ol>\n          <li>Click Safari in the top menu</li>\n          <li>Select \"Settings\" (or press ⌘ + ,)</li>\n          <li>Go to \"Privacy\"</li>\n          <li>Under \"Website tracking\":</li>\n          <li>Uncheck \"Prevent cross-site tracking\"</li>\n          <li>Refresh this page</li>\n        </ol>\n      </div>\n\n      <div className=\"cookie-alert-instructions\">\n        <h3>Safari Mobile Instructions:</h3>\n        <ol>\n          <li>Open iPhone Settings</li>\n          <li>Scroll down and tap \"Safari\"</li>\n          <li>Under \"Privacy & Security\":</li>\n          <li>Turn off \"Prevent Cross-Site Tracking\"</li>\n          <li>Refresh this page</li>\n        </ol>\n      </div>\n    </>\n  );\n\n  // ============================================================================\n  // RENDER\n  // ============================================================================\n  \n  return (\n    <div className=\"cookie-alert-overlay\">\n      <div className=\"cookie-alert-modal\">\n        {/* Header Section */}\n        <div className=\"cookie-alert-header\">\n          <h2 className=\"cookie-alert-title\">\n            <span role=\"img\" aria-label=\"warning\">⚠️</span>\n            Cookie Settings Required\n          </h2>\n          <button className=\"cookie-alert-accept\" onClick={handleAccept}>\n            I've Enabled Cookies\n          </button>\n        </div>\n\n        {/* Content Section */}\n        <div className=\"cookie-alert-content\">\n          <p className=\"cookie-alert-description\">\n            To use Keeper App, you need to allow cookies and disable tracking prevention in your browser. \n            This is required for maintaining your login session and ensuring the app functions properly.\n          </p>\n\n          {/* Browser Selection Buttons */}\n          <div className=\"cookie-alert-browser-toggle\">\n            <button\n              className={`cookie-alert-browser-button ${selectedBrowser === 'chrome' ? 'active' : ''}`}\n              onClick={() => setSelectedBrowser('chrome')}\n            >\n              Chrome\n            </button>\n            <button\n              className={`cookie-alert-browser-button ${selectedBrowser === 'safari' ? 'active' : ''}`}\n              onClick={() => setSelectedBrowser('safari')}\n            >\n              Safari\n            </button>\n          </div>\n\n          {/* Conditional Browser Instructions */}\n          {selectedBrowser === 'chrome' ? <ChromeInstructions /> : <SafariInstructions />}\n        </div>\n\n        {/* Footer Section */}\n        <div className=\"cookie-alert-footer\">\n          <strong>Note:</strong> After changing these settings, you may need to refresh the page or restart your browser for the changes to take effect.\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CookieAlert;","/**\n * App Component\n * Root component handling routing and note management functionality\n */\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { HashRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport axios from 'axios';\n\n// Layout Components\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\n// Feature Components\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\n// Authentication Components\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport ForgotPassword from \"./ForgotPassword\";\nimport ResetPassword from \"./ResetPassword\";\nimport VerifyEmail from \"./VerifyEmail\";\nimport PrivateRoute from \"./PrivateRoute\";\n\n// UI Components\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport LoadingButton from \"./LoadingButton\";\nimport CookieAlert from \"./CookieAlert\";\n\n// Context\nimport { AuthContext } from \"./AuthContext\";\n\n// Configure axios defaults\naxios.defaults.withCredentials = true;\n\n// API configuration\nconst API_URL = 'https://keeper-app-bakcend-and-db.onrender.com';\n\n\nfunction App() {\n  // State declarations\n  const [notes, setNotes] = useState([]);\n  const [editNote, setEditNote] = useState(null);\n  const { user, loading, checkAuthStatus } = useContext(AuthContext);\n\n  // Check authentication on mount\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  \n  // Fetch notes when user is authenticated\n  useEffect(() => {\n    if (user) {\n      fetchNotes();\n    }\n  }, [user]);\n  \n  // Note management functions\n  async function fetchNotes() {\n    console.log(\"Fetching notes. Current user:\", user);\n    try {\n      const response = await axios.get(`${API_URL}/notes`, user, {withCredentials: true });\n      console.log(\"Notes fetched successfully:\", response.data);\n      setNotes(response.data);\n    } catch (error) {\n      console.error(\"Error fetching notes:\", error.response?.data || error.message);\n      if (error.response && error.response.status === 401) {\n        console.log(\"Unauthorized. Clearing user state.\");\n      }\n    }\n  }\n  \n  async function addNote(newNote) {\n    try {\n      const response = await axios.post(\n        `${API_URL}/add`,\n        newNote,\n        { withCredentials: true }\n      );\n      const savedNote = response.data;\n      setNotes(prevNotes => [...prevNotes, savedNote]);\n    } catch (error) {\n      console.error(\"Error adding note:\", error);\n    }\n  }\n  \n  async function deleteNote(id) {\n    try {\n      await axios.delete(`${API_URL}/notes/${id}`, {withCredentials: true,} );\n      if (editNote && editNote.id === id) {\n        setEditNote(null);\n      }\n      setNotes(prevNotes => {\n        return prevNotes.filter((noteItem) => noteItem.id !== id);\n      });\n    } catch (error) {\n      console.error(\"There was an error deleting the note!\", error);\n    }\n  }\n\n  function handleEditClick(id, title, content, category) {\n    setEditNote({\n      id,\n      title,\n      content,\n      category,\n    });\n  }\n\n  async function updateNote(updatedNote) {\n    console.log(\"Updating note:\", updatedNote);\n    try {\n      // Input validation\n      if (!updatedNote.title || !updatedNote.content) {\n        throw new Error(\"Title and content are required\");\n      }\n  \n      const response = await axios.put(\n        `${API_URL}/notes/${updatedNote.id}`,\n        {\n          title: updatedNote.title,\n          content: updatedNote.content,\n          category: updatedNote.category\n        },\n        { withCredentials: true }\n      );\n      console.log(\"Update response:\", response.data);\n      setNotes(prevNotes =>\n        prevNotes.map(noteItem =>\n          noteItem.id === updatedNote.id ? response.data : noteItem\n        )\n      );\n      setEditNote(null);\n    } catch (error) {\n      console.error(\"Error updating note:\", error.response?.data || error.message);\n    }\n  }\n\n  // Show loading state while checking authentication\n  if (loading) {\n    return <LoadingSpinner />;\n  }\n\n  return (\n    <Router>\n      <Header />\n      <CookieAlert />\n      <Routes>\n        {/* Main notes dashboard - protected route */}\n        <Route\n          path=\"/\"\n          element={\n            <PrivateRoute>\n              <div className=\"notes-container\">\n                <CreateArea onAdd={addNote} editNote={editNote} onUpdate={updateNote} />\n                {notes.map((noteItem) => (\n                  <Note\n                    key={noteItem.id}\n                    id={noteItem.id}\n                    title={noteItem.title}\n                    content={noteItem.content}\n                    category={noteItem.category}  \n                    onDelete={deleteNote}\n                    onEdit={handleEditClick}\n                  />\n                ))}\n              </div>\n            </PrivateRoute>\n          }\n        />\n        \n        {/* Authentication routes */}\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/verify-email\" element={<VerifyEmail />} />\n        <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n        <Route path=\"/reset-password/:token\" element={<ResetPassword />} />\n        \n        {/* Utility routes */}\n        <Route path=\"/loading\" element={<LoadingSpinner />} />\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n      </Routes>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./components/App\";\nimport { AuthProvider } from \"./components/AuthContext\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <AuthProvider>\n    <App />\n    </AuthProvider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}